import:
  - ./build/taskctl/contexts.yaml
  - ./build/taskctl/tasks.yaml

pipelines:
  setup:
    - task: build:number

  # Build the images on the local machine/agent
  # These are required to be built so that the tools image can be used to build subsequent Docker images
  # using the independent runner from a container
  build:foundation:powershell:
    - task: build:image:local
      variables:
        IMAGE_NAME: ensono/eir-foundation-powershell
        DOCKER_BUILD_ARGS: -f ./src/definitions/foundation/powershell/Dockerfile.ubuntu ./src/definitions/foundation/powershell

  build:foundation:builder:
    - task: build:image:local
      variables:
        IMAGE_NAME: ensono/eir-foundation-builder
        DOCKER_BUILD_ARGS: -f ./src/definitions/foundation/builder/Dockerfile.ubuntu ./src/definitions/foundation/builder --build-arg IMAGE_TAG=${env:DOCKER_IMAGE_TAG} --build-arg REGISTRY=${env:DOCKER_CONTAINER_REGISTRY_NAME}

  build:foundation:azure-cli:
    - task: build:image:container
      variables:
        IMAGE_NAME: ensono/eir-foundation-azure-cli
        DOCKER_BUILD_ARGS: -f ./src/definitions/foundation/azure-cli/Dockerfile.ubuntu ./src/definitions/foundation/azure-cli --build-arg IMAGE_TAG=${env:DOCKER_IMAGE_TAG} --build-arg REGISTRY=${env:DOCKER_CONTAINER_REGISTRY_NAME}

  build:foundation:tools:
    - task: build:image:container
      variables:
        IMAGE_NAME: ensono/eir-foundation-tools
        DOCKER_BUILD_ARGS: -f ./src/definitions/foundation/tools/Dockerfile.ubuntu ./src/definitions/foundation/tools --build-arg IMAGE_TAG=${env:DOCKER_IMAGE_TAG} --build-arg REGISTRY=${env:DOCKER_CONTAINER_REGISTRY_NAME}

  # Build the images using the tools container
  # This means that there is less to install on a local machine to get things working
  build:infrastructure:
    - task: build:image:container
      variables:
        IMAGE_NAME: ensono/eir-infrastructure
        DOCKER_BUILD_ARGS: -f ./src/definitions/infrastructure/Dockerfile.ubuntu ./src/definitions/infrastructure --build-arg IMAGE_TAG=${env:DOCKER_IMAGE_TAG} --build-arg REGISTRY=${env:DOCKER_CONTAINER_REGISTRY_NAME}

  build:java:
    - task: build:image:container
      variables:
        IMAGE_NAME: ensono/eir-java
        DOCKER_BUILD_ARGS: -f ./src/definitions/java/Dockerfile.ubuntu ./src/definitions/java --build-arg IMAGE_TAG=${env:DOCKER_IMAGE_TAG} --build-arg REGISTRY=${env:DOCKER_CONTAINER_REGISTRY_NAME}

  build:dotnet:
    - task: build:image:container
      variables:
        IMAGE_NAME: ensono/eir-dotnet
        DOCKER_BUILD_ARGS: -f ./src/definitions/dotnet/Dockerfile.ubuntu ./src/definitions/dotnet --build-arg IMAGE_TAG=${env:DOCKER_IMAGE_TAG} --build-arg REGISTRY=${env:DOCKER_CONTAINER_REGISTRY_NAME}

  build:inspec:
    - task: build:image:container
      variables:
        IMAGE_NAME: ensono/eir-inspec
        DOCKER_BUILD_ARGS: -f ./src/definitions/inspec/Dockerfile.ubuntu ./src/definitions/inspec --build-arg IMAGE_TAG=${env:DOCKER_IMAGE_TAG} --build-arg REGISTRY=${env:DOCKER_CONTAINER_REGISTRY_NAME}

  build:golang:
    - task: build:image:container
      variables:
        IMAGE_NAME: ensono/eir-golang
        DOCKER_BUILD_ARGS: -f ./src/definitions/golang/Dockerfile.ubuntu ./src/definitions/golang --build-arg IMAGE_TAG=${env:DOCKER_IMAGE_TAG} --build-arg REGISTRY=${env:DOCKER_CONTAINER_REGISTRY_NAME}

  build:asciidoctor:
    - task: build:image:container
      variables:
        IMAGE_NAME: ensono/eir-asciidoctor
        DOCKER_BUILD_ARGS: -f ./src/definitions/asciidoctor/Dockerfile.ubuntu ./src/definitions/asciidoctor --build-arg IMAGE_TAG=${env:DOCKER_IMAGE_TAG} --build-arg REGISTRY=${env:DOCKER_CONTAINER_REGISTRY_NAME}

  build:data:
    - task: build:image:container
      variables:
        IMAGE_NAME: ensono/eir-azure-data
        DOCKER_BUILD_ARGS: -f ./src/definitions/foundation/azure-cli/Dockerfile.ubuntu ./src/definitions/foundation/azure-cli --build-arg IMAGE_TAG=${env:DOCKER_IMAGE_TAG} --build-arg REGISTRY=${env:DOCKER_CONTAINER_REGISTRY_NAME}

  build:kong:
    - task: build:image:container
      variables:
        IMAGE_NAME: ensono/eir-kong
        DOCKER_BUILD_ARGS: -f ./src/definitions/kong/Dockerfile.ubuntu ./src/definitions/foundation/azure-cli --build-arg IMAGE_TAG=${env:DOCKER_IMAGE_TAG} --build-arg REGISTRY=${env:DOCKER_CONTAINER_REGISTRY_NAME}

  build:node:
    - task: build:image:container
      variables:
        IMAGE_NAME: ensono/eir-nodejs
        DOCKER_BUILD_ARGS: -f ./src/definitions/node/Dockerfile.ubuntu ./src/definitions/node --build-arg IMAGE_TAG=${env:DOCKER_IMAGE_TAG} --build-arg REGISTRY=${env:DOCKER_CONTAINER_REGISTRY_NAME}

  publish:
    - task: update:dashboard

  docs:
    - pipeline: setup
    - task: _docs
      depends_on: setup

  # Pipeline to ensure that the infrastructure is valid
  infrastructure:
    - task: infra:init
    - task: infra:plan
      depends_on: infra:init
    - task: infra:apply
      depends_on: infra:plan

  infrastructure_variables:
    - task: setup:environment
    - task: infra:vars
      depends_on: setup:environment
