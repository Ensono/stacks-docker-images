# This foundation image is designed to have most of the tools installed that could ve
# used in other dependent images. This is not designed to be used, but used as a reference
# image to copy applications and libraries from

# Each subsequent image will be based on the PowerShell Alpine image, and items will be
# copied from this image as required

# Set versions of applications required
ARG NODE_VERSION=14
ARG ALPINE_VERSION=3.17
ARG POWERSHELL_VERSION=7.3-alpine-${ALPINE_VERSION}
ARG PYTHON_VERSION=3.10-alpine${ALPINE_VERSION}

# AWS CLI ===================================================================
# Define stage to install AWS CLI
FROM python:${PYTHON_VERSION} as awscli

ARG AWS_CLI_VERSION=2.13.21

# Install necessary components to build the CLI
RUN apk add --no-cache git \
        unzip \
        groff \
        build-base \
        libffi-dev \
        cmake

RUN git clone --single-branch --depth 1 -b ${AWS_CLI_VERSION} https://github.com/aws/aws-cli.git

# Install the AWS CLI
RUN cd /aws-cli && \
    ./configure --with-install-type=portable-exe --with-download-deps && \
    make && \
    make install && \
    cd /

# Remove items that will make subsequent images bigger, e.g autocomplete and examples
# Additionally remove the /aws-cli folder from the image
RUN rm -rf /aws-cli && \
    /usr/local/lib/aws-cli/aws_completer \
    /usr/local/lib/aws-cli/awscli/data/ac.index \
    /usr/local/lib/aws-cli/awscli/examples

RUN find /usr/local/lib/aws-cli/awscli/data -name completions-1*.json -delete && \
    find /usr/local/lib/aws-cli/awscli/botocore/data -name examples-1.json -delete && \
    (cd /usr/local/lib/aws-cli; for a in *.so*; do test -f /lib/$a && rm $a; done)
# ===========================================================================

# Azure CLI =================================================================
FROM python:${PYTHON_VERSION} as azcli

ARG AZURE_CLI_VERSION=2.48.1

# Install necessary components to build the CLI
RUN apk add --no-cache git \
        unzip \
        groff \
        build-base \
        libffi-dev \
        cmake

# Create a directory for the azcli
RUN mkdir -p /usr/local/azcli/bin

# Copy over required files
COPY files/az /usr/local/azcli/bin
COPY ./requirements.txt /usr/local/azcli

# Create python virtual environment and install the Azure CLI
RUN pip3 install --ignore-installed virtualenv && \
    python3 -m virtualenv /usr/local/azcli/venv && \
    /usr/local/azcli/venv/bin/python -m pip --no-cache-dir install azure-cli==${AZURE_CLI_VERSION} && \
    chmod +x /usr/local/azcli/bin/az && \
    pip3 install -r /usr/local/azcli/requirements.txt \
    rm -f /usr/local/azcli/requirements.txt
# ===========================================================================

# Install required tools into a PowerShell Alpine image
FROM mcr.microsoft.com/powershell:${POWERSHELL_VERSION}

# Define the versions of the applications to installe
ARG TERRAFORM_VERSION=1.5.1
ARG AMIDOBUILD=v0.0.252
ARG TASKCTL_VERSION="1.5.0"
ARG KUBE_VERSION=v1.23.14
ARG AZURE_AZ_MODULE_VERSON=10.0.0
ARG PESTER_VERSION=5.4.1
ARG HELM_VERSION=3.12.0
ARG ARM_TTK_VERSION="20221215"
ARG KLUCTL_VERSION=v2.22.1
ARG KUSTOMIZE_VERSION=v5.2.1
ARG TIMEZONE="Europe/London"

ENV TZ=${TIMEZONE}

# Install necessary Linux packages
RUN echo "https://dl-cdn.alpinelinux.org/alpine/v3.17/main" > /etc/apk/repositories && \
    echo "https://dl-cdn.alpinelinux.org/alpine/v3.17/community" >> /etc/apk/repositories && \
    apk update && \
    apk add --update --no-cache ca-certificates && \
    apk add -t deps && \
    apk add --no-cache --update \
        tzdata \
        unzip \
        python3 \
        py3-pip \
        curl

# Copy the install script over and then run it
COPY files/install_tools.sh /usr/local/bin/install_tools.sh
RUN chmod +x /usr/local/bin/install_tools.sh && /usr/local/bin/install_tools.sh
# ---------------------------------------------------------------------------

# Python Applications -------------------------------------------------------
# Copy apps from the multistage builds into the image

# AWS CLI *******************************************************************
COPY --from=awscli /usr/local/lib/aws-cli/ /usr/local/lib/aws-cli/
# ***************************************************************************

# AZ CLI ********************************************************************
COPY --from=azcli /usr/local/azcli /usr/local/azcli
# ***************************************************************************
# ---------------------------------------------------------------------------

# Node ----------------------------------------------------------------------
# Copy Node from the node stage so that the image can be used directly on the
# agent
COPY --from=node /usr/lib /usr/lib
COPY --from=node /usr/local/lib /usr/local/lib
COPY --from=node /usr/local/include /usr/local/include
COPY --from=node /usr/local/bin /usr/local/bin

LABEL "com.azure.dev.pipelines.agent.handler.node.path"="/usr/local/bin/node"

# Set the default command to use on the image, if one has not been specified
CMD ["node"]
# ---------------------------------------------------------------------------