name: "$(Build.SourceBranchName)-init"

pr:
  - main

trigger:
  branches:
    include:
      - "main"
  paths:
    include:
      - "*"

variables:
  - template: azuredevops-vars.yml
  - name: DebugPreference
    value: "Continue"
# Configure the stages
stages:
  - stage: Build

    jobs:
      - job: Build

        steps:
          # Install Taskctl for the build to run
          - task: Bash@3
            displayName: Install Taskctl
            inputs:
              targetType: inline
              script: |
                wget https://github.com/Ensono/taskctl/releases/download/v${{ variables.TaskctlVersion }}/taskctl_${{ variables.TaskctlVersion }}_linux_amd64.tar.gz -O /tmp/taskctl.tar.gz
                tar zxf /tmp/taskctl.tar.gz -C /usr/local/bin taskctl

          # Install the Independent Runner module for the base build
          - task: PowerShell@2
            displayName: Install Independent Runner
            inputs:
              targetType: inline
              script: |
                New-Item -Type directory -Path /home/vsts/modules/EnsonoBuild
                Invoke-WebRequest -Uri "https://github.com/Ensono/independent-runner/releases/download/v${{ variables.EnsonoBuild }}/EnsonoBuild.psd1" -OutFile /home/vsts/modules/EnsonoBuild/EnsonoBuild.psd1
                Invoke-WebRequest -Uri "https://github.com/Ensono/independent-runner/releases/download/v${{ variables.EnsonoBuild }}/EnsonoBuild.psm1" -OutFile /home/vsts/modules/EnsonoBuild/EnsonoBuild.psm1

          - task: Bash@3
            displayName: Setup
            inputs:
              targetType: inline
              script: |
                taskctl setup

          - task: Bash@3
            displayName: Foundation - PowerShell
            inputs:
              targetType: inline
              script: |
                taskctl build:foundation:powershell
            env:
              DOCKER_PASSWORD: $(DOCKER_PASSWORD) # requires explicit mapping to be used as an env var
              DOCKER_IMAGE_TAG: $(DOCKER_IMAGE_TAG)

          - task: Bash@3
            displayName: Publish to Dashboard
            inputs:
              targetType: inline
              script: |
                taskctl publish
            env:
              ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}: # On main branch runs
                PUBLISH_RELEASE: $true
              DASHBOARD_INFLUX_TOKEN: $(DASHBOARD_INFLUX_TOKEN) # requires explicit mapping to be used as an env var

          # Generate the documentation
          - task: Bash@3
            displayName: Generate Documentation
            inputs:
              targetType: inline
              script: |
                taskctl docs

          # Upload the documentation
          - task: PublishBuildArtifacts@1
            displayName: Publish Documentation
            inputs:
              pathToPublish: $(Build.SourcesDirectory)/outputs/docs
              artifactName: docs
