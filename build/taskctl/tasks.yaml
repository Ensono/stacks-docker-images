# Compilation tasks
tasks:
  build:number:
    context: powershell
    description: Update the build number
    command:
      - Import-Module EnsonoBuild
      - Update-BuildNumber
    # Set variable DOCKER_IMAGE_TAG; i.e. 0.2.1

  build:image:local:
    context: powershell
    description: Build the foundation image on the machine without using a container
    command:
      - |
        $ErrorActionPreference = "Stop"
        ./build/scripts/Build-DockerImage.ps1 -platform $env:PLATFORM -Name {{ .IMAGE_NAME }} -Arguments "{{ .DOCKER_BUILD_ARGS }}" -ErrorActionPreference "Stop"
        echo $?

  build:image:container:
    context: powershell_docker
    description: Build the foundation image on the machine using the tools container
    command:
      - |
        $ErrorActionPreference = "Stop"
        $sep = (Test-Path -Path "C:\") ? ";" : ":"
        $env:PSModulePath += "${sep}/home/vsts/modules"
        Import-Module EnsonoBuild
        ./build/scripts/Build-DockerImage.ps1 -platform $env:PLATFORM -Name {{ .IMAGE_NAME }} -Arguments "{{ .DOCKER_BUILD_ARGS }}" -ErrorActionPreference "Stop"

  create:docker:manifest:
    context: powershell_docker
    description: Create the Docker manifest for the images
    command: |
      $ErrorActionPreference = "Stop"
      ./build/scripts/New-DockerManifest.ps1 -Latest

  _docs:
    description: Build Docs for Stacks CLI
    context: docsenv
    command:
      - Invoke-AsciiDoc -PDF -basepath /app -config /app/docs.json -debug

  infra:init:
    context: powershell
    description: Initialise Terraform for chosen templates
    command:
      - Invoke-Terraform -Init -Path $env:TF_FILE_LOCATION -Arguments $env:TF_BACKEND_INIT -debug
      - Invoke-Terraform -Workspace -Arguments $env:ENV_NAME -Path $env:TF_FILE_LOCATION

  infra:vars:
    context: powershell
    description: Create Terraform variables file
    command:
      - ./build/scripts/Set-TFVars.ps1 | Tee-Object -FilePath "${env:TF_FILE_LOCATION}/terraform.tfvars"

  infra:plan:
    context: powershell
    description: Plan Terraform
    command:
      - Invoke-Terraform -Plan -Path $env:TF_FILE_LOCATION -Arguments "-input=false","-out=tfplan" -Debug
      - ls -l $env:TF_FILE_LOCATION

  infra:apply:
    context: powershell
    description: Apply Terraform
    command: |
      Push-Location $env:TF_FILE_LOCATION
      Invoke-Terraform -Apply -Path tfplan -debug

  infra:destroy:plan:
    context: powershell
    description: Destroy Environment.ShortName
    command:
      - Invoke-Terraform -Plan -Path $env:TF_FILE_LOCATION -Arguments "-destroy","-input=false","-out=destroy-tfplan" -debug | Out-Null

  infra:destroy:apply:
    context: powershell
    description: Destroy Environment.ShortName
    command:
      - Invoke-Terraform -Apply -Path "${env:TF_FILE_LOCATION}/destroy-tfplan" -Arguments @("-destroy") -debug

  setup:environment:
    context: powershell
    description: Ensure that the environment is configured correctly
    command:
      - Confirm-Environment -Path build/config/stage_envvars.yml

  build:container:
    context: powershell_docker
    description: Create container image for application
    command: |
      $ErrorActionPreference = "Stop"
      Write-Host "Build-DockerImage -push -provider generic -Name {{ .IMAGE_NAME }} -buildargs `"{{ .DOCKER_BUILD_ARGS }}`""
      Build-DockerImage -Name {{ .IMAGE_NAME }} -buildargs "{{ .DOCKER_BUILD_ARGS }}" -latest

  generate:docker:overview:
    context: docsenv
    description: Generate Docker overview files from main docs
    command: ./build/scripts/Set-DockerOverview.ps1

  debug:
    context: powershell_docker
    description: debugs env vars
    command:
      - Get-ChildItem env:/
